{
  "info": {
    "_postman_id": "51b37372-6892-41ca-9906-548dd9d2c79d",
    "name": "ExploreWithMe - Feature \"Comments\"",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "29185180"
  },
  "item": [
    {
      "name": "РЎРѕС…СЂР°РЅРµРЅРёРµ",
      "item": [
        {
          "name": "Р”РѕР±Р°РІР»РµРЅРёРµ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 201 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const source = JSON.parse(pm.request.body.raw);\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"РџРѕР»СЊР·РѕРІР°С‚РµР»СЊ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РїРѕР»СЏ: id, name, email\", function () {\r",
                  "pm.expect(target).to.have.property('id');\r",
                  "pm.expect(target).to.have.property('name');\r",
                  "pm.expect(target).to.have.property('email');\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Р”Р°РЅРЅС‹Рµ РІ РѕС‚РІРµС‚Рµ РґРѕР»Р¶РЅС‹ СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ РґР°РЅРЅС‹Рј РІ Р·Р°РїСЂРѕСЃРµ\", function () {\r",
                  "    pm.expect(target.id).to.not.be.null;\r",
                  "    pm.expect(source.name).equal(target.name, 'РРјСЏ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РґРѕР»Р¶РЅРѕ СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ РѕС‚РїСЂР°РІР»РµРЅРЅРѕРјСѓ РІ Р·Р°РїСЂРѕСЃРµ');\r",
                  "    pm.expect(source.email).equal(target.email, 'РџРѕС‡С‚Р° РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РґРѕР»Р¶РЅР° СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ РѕС‚РїСЂР°РІР»РµРЅРЅРѕР№ РІ Р·Р°РїСЂРѕСЃРµ');\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"email@mail.ru\",\r\n    \"name\": \"Name\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/admin/users",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "admin",
                "users"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Р”РѕР±Р°РІР»РµРЅРёРµ РєР°С‚РµРіРѕСЂРёРё",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 201 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const source = JSON.parse(pm.request.body.raw);\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"РљР°С‚РµРіРѕСЂРёСЏ РґРѕР»Р¶РЅР° СЃРѕРґРµСЂР¶Р°С‚СЊ РїРѕР»СЏ: id, name\", function () {\r",
                  "pm.expect(target).to.have.property('id');\r",
                  "pm.expect(target).to.have.property('name');\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Р”Р°РЅРЅС‹Рµ РІ РѕС‚РІРµС‚Рµ РґРѕР»Р¶РЅС‹ СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ РґР°РЅРЅС‹Рј РІ Р·Р°РїСЂРѕСЃРµ\", function () {\r",
                  "    pm.expect(target.id).to.not.be.null;\r",
                  "    pm.expect(source.name).equal(target.name, 'РќР°Р·РІР°РЅРёРµ РєР°С‚РµРіРѕСЂРёРё РґРѕР»Р¶РЅРѕ СЃРѕРІРїР°РґР°С‚СЊ СЃ РѕС‚РїСЂР°РІР»РµРЅРЅС‹Рј');\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"category\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/admin/categories",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "admin",
                "categories"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Р”РѕР±Р°РІР»РµРЅРёРµ СЃРѕР±С‹С‚РёСЏ",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 201 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.have.status(201);  \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const source = JSON.parse(pm.request.body.raw);\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"РЎРѕР±С‹С‚РёРµ РґРѕР»Р¶РЅРѕ СЃРѕРґРµСЂР¶Р°С‚СЊ РїРѕР»СЏ: id, title, annotation, category, paid, eventDate, initiator, description, participantLimit, state, createdOn, location, requestModeration\", function () {\r",
                  "pm.expect(target).to.have.property('id');\r",
                  "pm.expect(target).to.have.property('title');\r",
                  "pm.expect(target).to.have.property('annotation');\r",
                  "pm.expect(target).to.have.property('category');\r",
                  "pm.expect(target).to.have.property('paid');\r",
                  "pm.expect(target).to.have.property('eventDate');\r",
                  "pm.expect(target).to.have.property('initiator');\r",
                  "pm.expect(target).to.have.property('description');\r",
                  "pm.expect(target).to.have.property('participantLimit');\r",
                  "pm.expect(target).to.have.property('state');\r",
                  "pm.expect(target).to.have.property('createdOn');\r",
                  "pm.expect(target).to.have.property('location');\r",
                  "pm.expect(target).to.have.property('requestModeration');\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Р”Р°РЅРЅС‹Рµ РІ РѕС‚РІРµС‚Рµ РґРѕР»Р¶РЅС‹ СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ РґР°РЅРЅС‹Рј РІ Р·Р°РїСЂРѕСЃРµ\", function () {\r",
                  "    pm.expect(target.id).to.not.be.null;\r",
                  "    pm.expect(target.title).equal(source.title, 'РќР°Р·РІР°РЅРёРµ СЃРѕР±С‹С‚РёСЏ РґРѕР»Р¶РЅРѕ СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ РЅР°Р·РІР°РЅРёСЋ СЃРѕР±С‹С‚РёСЏ РІ Р·Р°РїСЂРѕСЃРµ');\r",
                  "    pm.expect(target.annotation).equal(source.annotation, 'РђРЅРЅРѕС‚Р°С†РёСЏ СЃРѕР±С‹С‚РёСЏ РґРѕР»Р¶РЅР° СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ Р°РЅРЅРѕС‚Р°С†РёРё СЃРѕР±С‹С‚РёСЏ РІ Р·Р°РїСЂРѕСЃРµ');\r",
                  "    pm.expect(target.eventDate).equal(source.eventDate, 'Р”Р°С‚Р° РїСЂРѕРІРµРґРµРЅРёСЏ СЃРѕР±С‹С‚РёСЏ РґРѕР»Р¶РЅР° СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ РґР°С‚Рµ РїСЂРѕРІРµРґРµРЅРёСЏ СЃРѕР±С‹С‚РёСЏ РІ Р·Р°РїСЂРѕСЃРµ');\r",
                  "    pm.expect(target.description).equal(source.description, 'РћРїРёСЃР°РЅРёРµ СЃРѕР±С‹С‚РёСЏ РґРѕР»Р¶РЅРѕ СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ РѕРїРёСЃР°РЅРёРµ СЃРѕР±С‹С‚РёСЏ РІ Р·Р°РїСЂРѕСЃРµ');\r",
                  "    pm.expect(target.location.lat.toString()).equal(source.location.lat.toString(), 'РЁРёСЂРѕС‚Р° Р»РѕРєР°С†РёРё РїСЂРѕРІРµРґРµРЅРёСЏ СЃРѕР±С‹С‚РёСЏ РґРѕР»Р¶РЅР° СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ С€РёСЂРѕС‚Рµ Р»РѕРєР°С†РёРё РїСЂРѕРІРµРґРµРЅРёСЏ СЃРѕР±С‹С‚РёСЏ РІ Р·Р°РїСЂРѕСЃРµ');\r",
                  "    pm.expect(target.location.lon.toString()).equal(source.location.lon.toString(), 'Р”РѕР»РіРѕС‚Р° Р»РѕРєР°С†РёРё РїСЂРѕРІРµРґРµРЅРёСЏ СЃРѕР±С‹С‚РёСЏ РґРѕР»Р¶РЅР° СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ РґРѕР»РіРѕС‚Рµ Р»РѕРєР°С†РёРё РїСЂРѕРІРµРґРµРЅРёСЏ СЃРѕР±С‹С‚РёСЏ РІ Р·Р°РїСЂРѕСЃРµ');\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"annotation\": \"annotation annotation\",\r\n    \"category\": \"1\",\r\n    \"description\": \"description description\",\r\n    \"eventDate\": \"2024-08-16 20:26:54\",\r\n    \"location\": {\r\n        \"lat\":-4.8094,\r\n        \"lon\":-104.6619\r\n    },\r\n    \"title\": \"title\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/1/events",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "1",
                "events"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Р”РѕР±Р°РІР»РµРЅРёРµ РєРѕРјРјРµРЅС‚Р°СЂРёСЏ Рє РЅРµРѕРїСѓР±Р»РёРєРѕРІР°РЅРЅРѕРјСѓ СЃРѕР±С‹С‚РёСЋ",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 409 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.have.status(409);  \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"content\": \"content\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/1/comments?eventId=1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "1",
                "comments"
              ],
              "query": [
                {
                  "key": "eventId",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "РџСѓР±Р»РёРєР°С†РёСЏ СЃРѕР±С‹С‚РёСЏ",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 200 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.be.ok;    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const source = pm.collectionVariables.get('response');\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"РЎРѕР±С‹С‚РёРµ РґРѕР»Р¶РЅРѕ СЃРѕРґРµСЂР¶Р°С‚СЊ РїРѕР»СЏ: id, title, annotation, category, paid, eventDate, initiator, description, participantLimit, state, createdOn, publishedOn, location, requestModeration\", function () {\r",
                  "pm.expect(target).to.have.property('id');\r",
                  "pm.expect(target).to.have.property('title');\r",
                  "pm.expect(target).to.have.property('annotation');\r",
                  "pm.expect(target).to.have.property('category');\r",
                  "pm.expect(target).to.have.property('paid');\r",
                  "pm.expect(target).to.have.property('eventDate');\r",
                  "pm.expect(target).to.have.property('initiator');\r",
                  "pm.expect(target).to.have.property('description');\r",
                  "pm.expect(target).to.have.property('participantLimit');\r",
                  "pm.expect(target).to.have.property('state');\r",
                  "pm.expect(target).to.have.property('createdOn');\r",
                  "pm.expect(target).to.have.property('publishedOn');\r",
                  "pm.expect(target).to.have.property('location');\r",
                  "pm.expect(target).to.have.property('requestModeration');\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Р”Р°РЅРЅС‹Рµ РІ РѕС‚РІРµС‚Рµ РґРѕР»Р¶РЅС‹ СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ РґР°РЅРЅС‹Рј РІ Р·Р°РїСЂРѕСЃРµ\", function () {\r",
                  "    pm.expect(target.publishedOn).not.to.be.null;\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"stateAction\": \"PUBLISH_EVENT\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/admin/events/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "admin",
                "events",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Р”РѕР±Р°РІР»РµРЅРёРµ РєРѕРјРјРµРЅС‚Р°СЂРёСЏ Рє РѕРїСѓР±Р»РёРєРѕРІР°РЅРЅРѕРјСѓ СЃРѕР±С‹С‚РёСЋ",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 201 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.have.status(201);  \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const source = JSON.parse(pm.request.body.raw);\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"РљРѕРјРјРµРЅС‚Р°СЂРёР№ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РїРѕР»СЏ: id, content, author, event, created, updated\", function () {\r",
                  "pm.expect(target).to.have.property('id');\r",
                  "pm.expect(target).to.have.property('content');\r",
                  "pm.expect(target).to.have.property('author');\r",
                  "pm.expect(target).to.have.property('event');\r",
                  "pm.expect(target).to.have.property('created');\r",
                  "pm.expect(target).to.have.property('updated');\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Р”Р°РЅРЅС‹Рµ РІ РѕС‚РІРµС‚Рµ РґРѕР»Р¶РЅС‹ СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ РґР°РЅРЅС‹Рј РІ Р·Р°РїСЂРѕСЃРµ\", function () {\r",
                  "    pm.expect(target.id).to.not.be.null;\r",
                  "    pm.expect(target.content).equal(source.content, 'РЎРѕРґРµСЂР¶Р°РЅРёРµ РєРѕРјРјРµРЅС‚Р°СЂРёСЏ РґРѕР»Р¶РЅРѕ СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ СЃРѕРґРµСЂР¶Р°РЅРёСЋ РєРѕРјРјРµРЅС‚Р°СЂРёСЏ РІ Р·Р°РїСЂРѕСЃРµ');\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"content\": \"content\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/1/comments?eventId=1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "1",
                "comments"
              ],
              "query": [
                {
                  "key": "eventId",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Р”РѕР±Р°РІР»РµРЅРёРµ РєРѕРјРјРµРЅС‚Р°СЂРёСЏ c РЅСѓР»РµРІС‹Рј СЃРѕРґРµСЂР¶Р°РЅРёРµРј",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 400 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.have.status(400);  \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"content\": null\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/1/comments?eventId=1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "1",
                "comments"
              ],
              "query": [
                {
                  "key": "eventId",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Р”РѕР±Р°РІР»РµРЅРёРµ РєРѕРјРјРµРЅС‚Р°СЂРёСЏ c РїСѓСЃС‚С‹Рј СЃРѕРґРµСЂР¶Р°РЅРёРµРј",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 400 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.have.status(400);  \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"content\": \"\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/1/comments?eventId=1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "1",
                "comments"
              ],
              "query": [
                {
                  "key": "eventId",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Р”РѕР±Р°РІР»РµРЅРёРµ РєРѕРјРјРµРЅС‚Р°СЂРёСЏ c СЃРѕРґРµСЂР¶Р°РЅРёРµРј Р±РѕР»РµРµ 2000 СЃРёРјРІРѕР»РѕРІ",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 400 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.have.status(400);  \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"content\": \"content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content \"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/1/comments?eventId=1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "1",
                "comments"
              ],
              "query": [
                {
                  "key": "eventId",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "РџСЂРѕРІРµСЂРєР° РїРѕР»СЏ comments",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 200 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.be.ok;    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"РЎРѕР±С‹С‚РёРµ РґРѕР»Р¶РЅРѕ СЃРѕРґРµСЂР¶Р°С‚СЊ РїРѕР»e: comments\", function () {\r",
                  "pm.expect(target).to.have.property('comments');\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Р—РЅР°С‡РµРЅРёРµ РїРѕР»СЏ comments РґРѕР»Р¶РЅРѕ СѓРІРµР»РёС‡РёС‚СЃСЏ РЅР° 1 РїРѕСЃР»Рµ СЃРѕС…СЂР°РЅРµРЅРёСЏ РєРѕРјРјРµРЅС‚Р°СЂРёСЏ\", function () {\r",
                  "    pm.expect(target.comments).equal(1);\r",
                  "    \r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/events/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "events",
                "1"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "РћР±РЅРѕРІР»РµРЅРёРµ",
      "item": [
        {
          "name": "РћР±РЅРѕРІР»РµРЅРёРµ РєРѕРјРјРµРЅС‚Р°СЂРёСЏ",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 200 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.be.ok;    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const source = JSON.parse(pm.request.body.raw);\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"РљРѕРјРјРµРЅС‚Р°СЂРёР№ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РїРѕР»СЏ: id, content, author, event, created\", function () {\r",
                  "pm.expect(target).to.have.property('id');\r",
                  "pm.expect(target).to.have.property('content');\r",
                  "pm.expect(target).to.have.property('author');\r",
                  "pm.expect(target).to.have.property('event');\r",
                  "pm.expect(target).to.have.property('created');\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Р”Р°РЅРЅС‹Рµ РІ РѕС‚РІРµС‚Рµ РґРѕР»Р¶РЅС‹ СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ РґР°РЅРЅС‹Рј РІ Р·Р°РїСЂРѕСЃРµ\", function () {\r",
                  "    pm.expect(target.id).to.not.be.null;\r",
                  "    pm.expect(source.content).equal(target.content, 'РЎРѕРґРµСЂР¶Р°РЅРёРµ РєРѕРјРјРµРЅС‚Р°СЂРёСЏ РґРѕР»Р¶РЅРѕ СЃРѕРІРїР°РґР°С‚СЊ СЃ РѕС‚РїСЂР°РІР»РµРЅРЅС‹Рј');\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"content\": \"new content\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/1/comments/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "1",
                "comments",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "РћР±РЅРѕРІР»РµРЅРёРµ РЅРµСЃСѓС‰РµСЃС‚РІСѓСЋС‰РµРіРѕ РєРѕРјРјРµРЅС‚Р°СЂРёСЏ",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 404 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.have.status(404);  \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"content\": \"new content\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/1/comments/2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "1",
                "comments",
                "2"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Р”РѕР±Р°РІР»РµРЅРёРµ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 201 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const source = JSON.parse(pm.request.body.raw);\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"РџРѕР»СЊР·РѕРІР°С‚РµР»СЊ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РїРѕР»СЏ: id, name, email\", function () {\r",
                  "pm.expect(target).to.have.property('id');\r",
                  "pm.expect(target).to.have.property('name');\r",
                  "pm.expect(target).to.have.property('email');\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Р”Р°РЅРЅС‹Рµ РІ РѕС‚РІРµС‚Рµ РґРѕР»Р¶РЅС‹ СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ РґР°РЅРЅС‹Рј РІ Р·Р°РїСЂРѕСЃРµ\", function () {\r",
                  "    pm.expect(target.id).to.not.be.null;\r",
                  "    pm.expect(source.name).equal(target.name, 'РРјСЏ РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РґРѕР»Р¶РЅРѕ СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ РѕС‚РїСЂР°РІР»РµРЅРЅРѕРјСѓ РІ Р·Р°РїСЂРѕСЃРµ');\r",
                  "    pm.expect(source.email).equal(target.email, 'РџРѕС‡С‚Р° РїРѕР»СЊР·РѕРІР°С‚РµР»СЏ РґРѕР»Р¶РЅР° СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ РѕС‚РїСЂР°РІР»РµРЅРЅРѕР№ РІ Р·Р°РїСЂРѕСЃРµ');\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"otherEmail@mail.ru\",\r\n    \"name\": \"OtherName\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/admin/users",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "admin",
                "users"
              ]
            }
          },
          "response": []
        },
        {
          "name": "РћР±РЅРѕРІР»РµРЅРёРµ РєРѕРјРјРµРЅС‚Р°СЂРёСЏ РЅРµ Р°РІС‚РѕСЂРѕРј",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 409 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.have.status(409);  \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"content\": \"new content\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/2/comments/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "2",
                "comments",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "РћР±РЅРѕРІР»РµРЅРёРµ РєРѕРјРјРµРЅС‚Р°СЂРёСЏ c РЅСѓР»РµРІС‹Рј СЃРѕРґРµСЂР¶Р°РЅРёРµРј",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 400 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.have.status(400);  \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/1/comments/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "1",
                "comments",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "РћР±РЅРѕРІР»РµРЅРёРµ РєРѕРјРјРµРЅС‚Р°СЂРёСЏ c РїСѓСЃС‚С‹Рј СЃРѕРґРµСЂР¶Р°РЅРёРµРј",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 400 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.have.status(400);  \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"content\": \"\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/1/comments/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "1",
                "comments",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "РћР±РЅРѕРІР»РµРЅРёРµ РєРѕРјРјРµРЅС‚Р°СЂРёСЏ c СЃРѕРґРµСЂР¶Р°РЅРёРµРј Р±РѕР»РµРµ 2000 СЃРёРјРІРѕР»РѕРІ",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 400 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.have.status(400);  \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"content\": \"content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content content \"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/1/comments/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "1",
                "comments",
                "1"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "РџРѕР»СѓС‡РµРЅРёРµ",
      "item": [
        {
          "name": "РџРѕР»СѓС‡РёС‚СЊ РІСЃРµ РєРѕРјРјРµРЅС‚Р°СЂРёРё РїРѕ СЃРѕР±С‹С‚РёСЋ",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 200 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.be.ok;    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const source = pm.collectionVariables.get('response');\r",
                  "const target = pm.response.json()[0];\r",
                  "\r",
                  "pm.test(\"РљРѕРјРјРµРЅС‚Р°СЂРёР№ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РїРѕР»СЏ: id, content, author, event, created, updated\", function () {\r",
                  "pm.expect(target).to.have.property('id');\r",
                  "pm.expect(target).to.have.property('content');\r",
                  "pm.expect(target).to.have.property('author');\r",
                  "pm.expect(target).to.have.property('event');\r",
                  "pm.expect(target).to.have.property('created');\r",
                  "pm.expect(target).to.have.property('created');\r",
                  "pm.expect(target).to.have.property('updated');\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Р”Р°РЅРЅС‹Рµ РІ РѕС‚РІРµС‚Рµ РґРѕР»Р¶РЅС‹ СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ РґР°РЅРЅС‹Рј РІ Р·Р°РїСЂРѕСЃРµ\", function () {\r",
                  "    pm.expect(target.id).to.not.be.null;\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/comments?eventId=1&from=0&size=1000",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "comments"
              ],
              "query": [
                {
                  "key": "eventId",
                  "value": "1"
                },
                {
                  "key": "from",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "1000"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Р”РѕР±Р°РІР»РµРЅРёРµ СЃРѕР±С‹С‚РёСЏ",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 201 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.have.status(201);  \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const source = JSON.parse(pm.request.body.raw);\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"РЎРѕР±С‹С‚РёРµ РґРѕР»Р¶РЅРѕ СЃРѕРґРµСЂР¶Р°С‚СЊ РїРѕР»СЏ: id, title, annotation, category, paid, eventDate, initiator, description, participantLimit, state, createdOn, location, requestModeration\", function () {\r",
                  "pm.expect(target).to.have.property('id');\r",
                  "pm.expect(target).to.have.property('title');\r",
                  "pm.expect(target).to.have.property('annotation');\r",
                  "pm.expect(target).to.have.property('category');\r",
                  "pm.expect(target).to.have.property('paid');\r",
                  "pm.expect(target).to.have.property('eventDate');\r",
                  "pm.expect(target).to.have.property('initiator');\r",
                  "pm.expect(target).to.have.property('description');\r",
                  "pm.expect(target).to.have.property('participantLimit');\r",
                  "pm.expect(target).to.have.property('state');\r",
                  "pm.expect(target).to.have.property('createdOn');\r",
                  "pm.expect(target).to.have.property('location');\r",
                  "pm.expect(target).to.have.property('requestModeration');\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Р”Р°РЅРЅС‹Рµ РІ РѕС‚РІРµС‚Рµ РґРѕР»Р¶РЅС‹ СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ РґР°РЅРЅС‹Рј РІ Р·Р°РїСЂРѕСЃРµ\", function () {\r",
                  "    pm.expect(target.id).to.not.be.null;\r",
                  "    pm.expect(target.title).equal(source.title, 'РќР°Р·РІР°РЅРёРµ СЃРѕР±С‹С‚РёСЏ РґРѕР»Р¶РЅРѕ СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ РЅР°Р·РІР°РЅРёСЋ СЃРѕР±С‹С‚РёСЏ РІ Р·Р°РїСЂРѕСЃРµ');\r",
                  "    pm.expect(target.annotation).equal(source.annotation, 'РђРЅРЅРѕС‚Р°С†РёСЏ СЃРѕР±С‹С‚РёСЏ РґРѕР»Р¶РЅР° СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ Р°РЅРЅРѕС‚Р°С†РёРё СЃРѕР±С‹С‚РёСЏ РІ Р·Р°РїСЂРѕСЃРµ');\r",
                  "    pm.expect(target.eventDate).equal(source.eventDate, 'Р”Р°С‚Р° РїСЂРѕРІРµРґРµРЅРёСЏ СЃРѕР±С‹С‚РёСЏ РґРѕР»Р¶РЅР° СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ РґР°С‚Рµ РїСЂРѕРІРµРґРµРЅРёСЏ СЃРѕР±С‹С‚РёСЏ РІ Р·Р°РїСЂРѕСЃРµ');\r",
                  "    pm.expect(target.description).equal(source.description, 'РћРїРёСЃР°РЅРёРµ СЃРѕР±С‹С‚РёСЏ РґРѕР»Р¶РЅРѕ СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ РѕРїРёСЃР°РЅРёРµ СЃРѕР±С‹С‚РёСЏ РІ Р·Р°РїСЂРѕСЃРµ');\r",
                  "    pm.expect(target.location.lat.toString()).equal(source.location.lat.toString(), 'РЁРёСЂРѕС‚Р° Р»РѕРєР°С†РёРё РїСЂРѕРІРµРґРµРЅРёСЏ СЃРѕР±С‹С‚РёСЏ РґРѕР»Р¶РЅР° СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ С€РёСЂРѕС‚Рµ Р»РѕРєР°С†РёРё РїСЂРѕРІРµРґРµРЅРёСЏ СЃРѕР±С‹С‚РёСЏ РІ Р·Р°РїСЂРѕСЃРµ');\r",
                  "    pm.expect(target.location.lon.toString()).equal(source.location.lon.toString(), 'Р”РѕР»РіРѕС‚Р° Р»РѕРєР°С†РёРё РїСЂРѕРІРµРґРµРЅРёСЏ СЃРѕР±С‹С‚РёСЏ РґРѕР»Р¶РЅР° СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ РґРѕР»РіРѕС‚Рµ Р»РѕРєР°С†РёРё РїСЂРѕРІРµРґРµРЅРёСЏ СЃРѕР±С‹С‚РёСЏ РІ Р·Р°РїСЂРѕСЃРµ');\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"annotation\": \"annotation annotation\",\r\n    \"category\": \"1\",\r\n    \"description\": \"description description\",\r\n    \"eventDate\": \"2024-08-16 20:26:54\",\r\n    \"location\": {\r\n        \"lat\":-4.8094,\r\n        \"lon\":-104.6619\r\n    },\r\n    \"title\": \"title\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/1/events",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "1",
                "events"
              ]
            }
          },
          "response": []
        },
        {
          "name": "РџРѕР»СѓС‡РёС‚СЊ РІСЃРµ РєРѕРјРјРµРЅС‚Р°СЂРёРё РїРѕ СЃРѕР±С‹С‚РёСЋ Р±РµР· РєРѕРјРјРµРЅС‚Р°СЂРёРµРІ",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 200 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.be.ok;    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const source = pm.collectionVariables.get('response');\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РїСѓСЃС‚РѕР№ РјР°СЃСЃРёРІ\", function () {\r",
                  "    pm.expect(target).to.have.length(0);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/comments?eventId=2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "comments"
              ],
              "query": [
                {
                  "key": "eventId",
                  "value": "2"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "РџРѕР»СѓС‡РёС‚СЊ РІСЃРµ РєРѕРјРјРµРЅС‚Р°СЂРёРё РїРѕ РЅРµСЃСѓС‰РµСЃС‚РІСѓСЋС‰РµРјСѓ СЃРѕР±С‹С‚РёСЋ",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 404 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.have.status(404);  \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/comments?eventId=333",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "comments"
              ],
              "query": [
                {
                  "key": "eventId",
                  "value": "333"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "РЈРґР°Р»РµРЅРёРµ",
      "item": [
        {
          "name": "РЈРґР°Р»РµРЅРёРµ РєРѕРјРјРµРЅС‚Р°СЂРёСЏ РЅРµ Р°РІС‚РѕСЂРѕРј",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 409 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.have.status(409);  \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/users/2/comments/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "2",
                "comments",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "РЈРґР°Р»РµРЅРёРµ РєРѕРјРјРµРЅС‚Р°СЂРёСЏ Р°РІС‚РѕСЂРѕРј",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 204 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.have.status(204);  \r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/users/1/comments/1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "1",
                "comments",
                "1"
              ]
            }
          },
          "response": []
        },
        {
          "name": "РџРѕР»СѓС‡РёС‚СЊ РІСЃРµ РєРѕРјРјРµРЅС‚Р°СЂРёРё РїРѕ СЃРѕР±С‹С‚РёСЋ Р±РµР· РєРѕРјРјРµРЅС‚Р°СЂРёРµРІ",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 200 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.be.ok;    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const source = pm.collectionVariables.get('response');\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РїСѓСЃС‚РѕР№ РјР°СЃСЃРёРІ\", function () {\r",
                  "    pm.expect(target).to.have.length(0);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/comments?eventId=1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "comments"
              ],
              "query": [
                {
                  "key": "eventId",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Р”РѕР±Р°РІР»РµРЅРёРµ РєРѕРјРјРµРЅС‚Р°СЂРёСЏ Рє РѕРїСѓР±Р»РёРєРѕРІР°РЅРЅРѕРјСѓ СЃРѕР±С‹С‚РёСЋ",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 201 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.have.status(201);  \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const source = JSON.parse(pm.request.body.raw);\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"РљРѕРјРјРµРЅС‚Р°СЂРёР№ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РїРѕР»СЏ: id, content, author, event, created, updated\", function () {\r",
                  "pm.expect(target).to.have.property('id');\r",
                  "pm.expect(target).to.have.property('content');\r",
                  "pm.expect(target).to.have.property('author');\r",
                  "pm.expect(target).to.have.property('event');\r",
                  "pm.expect(target).to.have.property('created');\r",
                  "pm.expect(target).to.have.property('updated');\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Р”Р°РЅРЅС‹Рµ РІ РѕС‚РІРµС‚Рµ РґРѕР»Р¶РЅС‹ СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ РґР°РЅРЅС‹Рј РІ Р·Р°РїСЂРѕСЃРµ\", function () {\r",
                  "    pm.expect(target.id).to.not.be.null;\r",
                  "    pm.expect(target.content).equal(source.content, 'РЎРѕРґРµСЂР¶Р°РЅРёРµ РєРѕРјРјРµРЅС‚Р°СЂРёСЏ РґРѕР»Р¶РЅРѕ СЃРѕРѕС‚РІРµС‚СЃС‚РІРѕРІР°С‚СЊ СЃРѕРґРµСЂР¶Р°РЅРёСЋ РєРѕРјРјРµРЅС‚Р°СЂРёСЏ РІ Р·Р°РїСЂРѕСЃРµ');\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"content\": \"content\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:8080/users/1/comments?eventId=1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "users",
                "1",
                "comments"
              ],
              "query": [
                {
                  "key": "eventId",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "РЈРґР°Р»РµРЅРёРµ РєРѕРјРјРµРЅС‚Р°СЂРёСЏ Р°РґРјРёРЅРёСЃС‚СЂР°С‚РѕСЂРѕРј",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 204 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.have.status(204);  \r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/admin/comments/2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "admin",
                "comments",
                "2"
              ]
            }
          },
          "response": []
        },
        {
          "name": "РџРѕР»СѓС‡РёС‚СЊ РІСЃРµ РєРѕРјРјРµРЅС‚Р°СЂРёРё РїРѕ СЃРѕР±С‹С‚РёСЋ Р±РµР· РєРѕРјРјРµРЅС‚Р°СЂРёРµРІ",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 200 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.be.ok;    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const source = pm.collectionVariables.get('response');\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РїСѓСЃС‚РѕР№ РјР°СЃСЃРёРІ\", function () {\r",
                  "    pm.expect(target).to.have.length(0);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/comments?eventId=1",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "comments"
              ],
              "query": [
                {
                  "key": "eventId",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "РЈРґР°Р»РµРЅРёРµ РЅРµСЃСѓС‰РµСЃС‚РІСѓСЋС‰РµРіРѕ РєРѕРјРјРµРЅС‚Р°СЂРёСЏ",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"РћС‚РІРµС‚ РґРѕР»Р¶РµРЅ СЃРѕРґРµСЂР¶Р°С‚СЊ РєРѕРґ СЃС‚Р°С‚СѓСЃР° 404 Рё РґР°РЅРЅС‹Рµ РІ С„РѕСЂРјР°С‚Рµ json\", function () {\r",
                  "    pm.response.to.have.status(404);  \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/admin/comments/2",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "admin",
                "comments",
                "2"
              ]
            }
          },
          "response": []
        }
      ]
    }
  ]
}